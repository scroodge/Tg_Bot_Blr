#!/bin/bash

# –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Gemini API —á–µ—Ä–µ–∑ curl

echo "ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Gemini API —á–µ—Ä–µ–∑ curl"
echo "======================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "üí° –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å GEMINI_API_KEY"
    exit 1
fi

# –ó–∞–≥—Ä—É–∂–∞–µ–º API –∫–ª—é—á –∏–∑ .env
API_KEY=$(grep "GEMINI_API_KEY=" .env | cut -d'=' -f2 | tr -d '"' | tr -d "'")

if [ -z "$API_KEY" ]; then
    echo "‚ùå GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
    echo "üí° –î–æ–±–∞–≤—å—Ç–µ GEMINI_API_KEY=your_api_key –≤ .env —Ñ–∞–π–ª"
    exit 1
fi

echo "üîë API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: ${API_KEY:0:10}..."

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–æ–¥–µ–ª–∏
MODELS=("gemini-2.0-flash" "gemini-1.5-flash" "gemini-1.5-pro" "gemini-pro")

for MODEL in "${MODELS[@]}"; do
    echo ""
    echo "üîç –¢–µ—Å—Ç–∏—Ä—É—é –º–æ–¥–µ–ª—å: $MODEL"
    echo "------------------------"
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    curl -s "https://generativelanguage.googleapis.com/v1beta/models/$MODEL:generateContent" \
        -H 'Content-Type: application/json' \
        -H "X-goog-api-key: $API_KEY" \
        -X POST \
        -d '{
            "contents": [
                {
                    "parts": [
                        {
                            "text": "–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ \"–ø—Ä–∏–≤–µ—Ç\" –Ω–∞ –±–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–≤–æ–¥–æ–º."
                        }
                    ]
                }
            ]
        }' | jq -r '.candidates[0].content.parts[0].text' 2>/dev/null
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ –ú–æ–¥–µ–ª—å $MODEL —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        break
    else
        echo "‚ùå –ú–æ–¥–µ–ª—å $MODEL –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    fi
done

echo ""
echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
